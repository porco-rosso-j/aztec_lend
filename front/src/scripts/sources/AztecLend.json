{
  "name": "AztecLend",
  "functions": [
    {
      "name": "_approve_bridge_and_exit_input_asset_to_L1",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token_bridge",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_assert_token_is_same",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token_bridge",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_authwith_msg_hash",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "azteclend",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "user",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "deposit_private",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "input_asset",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "input_asset_bridge",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "input_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "output_asset_bridge",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "nonce_for_unshield_approval",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash_for_redeeming_minted_notes",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash_for_L1_to_l2_message",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "deadline_for_L1_to_l2_message",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "canceller_for_L1_to_L2_message",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "caller_on_L1",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "deposit_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "sender",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "input_asset_bridge",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "input_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "output_asset_bridge",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "nonce_for_transfer_approval",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "recipient",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash_for_L1_to_l2_message",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "deadline_for_L1_to_l2_message",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "canceller_for_L1_to_L2_message",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "caller_on_L1",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "nonce_for_swap_approval",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_secret_hash",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "secret",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VUQQ7DIAwLMOhopz1gr6DTHsD/XzVlw5KXVb009YUIkO04tElEgnyRqGZgr4+1HcMa/Lga+41UP8Zazb6iUN2dfBT/nFomr3Wjz/s4vzjPR7WSyOYbsLkJ6auX7OulgReAL+gsdB7JR3HOJJAmeDPpndP/+lLOybeXZ5XfTBV7852ov6tzrrfBj7mC32bLs519PXze2EL9QnOmFd8f7lVTY43mnvb290/tTuGBmAWCCUzxBq6nWjPlBQAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "is_valid_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "message_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "nonce_for_burn_approval",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcKA/RxH8/vUH1BD2DN2hi46eJev9YIpOOiP4ImzRLgc7Mzm61iCh5RSdLqC/rfcqO9oaU+z/DEVctTDtj2IQVSLNOeZtq0XV5j5uCf448rsRz4N4wrhBXkPceYq/LvAi0xln0bkfnpvAN7prCPa7dNqideQZ6B9eaNBjS4upq6SOGlyU64oIOaPLkk8/0cg885Raz06In3HvErxkF/2p+8M/cH9fbeJlO03hWBJGPlCYYXvPYw34eTdzFmZdPidX8yHFVlmM8Aa2/RE2EBQAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "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r7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrrMyvsjK/ysr8Kivzq6zMr7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrrMyvsjK/ysr8Kivzq6zMr7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrrMyvsjK/ysr8Kivzq6zMr7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrrMyvsjK/ysr8Kivzq6zMr7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrrMyvsjK/ysr8Kivzq6zMr7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrrMyvsjK/ysr8Kivzq6zMr7Iyv8rK/Cor86uszK+yMr/KyvwqK/OrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6LMr4oyvyrK/Koo86uizK+KMr8qyvyqKPOrosyvijK/Ksr8qijzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oyv6rK/Koq86uqzK+qMr+qyvyqKvOrqsyvqjK/qsr8qirzq6rMr6oy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",
      "",
      "",
      "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
      "",
      "",
      "eJy100EKwyAQheG7zFqKozEar1K6kDSFQDCluhPvnrSUQEmXvt0MPPhWf6FlHUOe15jIF5KXnvy1UHqG+P5TDq9MntnITtAU759bcxX0mJdp/6o4ra2z363r1bHUQ72JHbBowKGBAQ2whAsMFxRc0HChgwsGLsCDZnjRDE+a4U2rxk2bs9C46T9C46Z/hVo3ZN3jCA==",
      "",
      "eJzNlMsKgzAQRf9l1qE4M3lYf6V0Ia0FQbRUd5J/r1JiC0nJRmR2Gbg3nMXMmaEbbvXUDv0I1QzFyUB1mWF81v06j1P9mqBCZGcVNP19fWvUXsGj7Zpl8ipOk6UQZuYt6zgR/n6s0W1Ra/xVLTRWFI0TRVOKojmLosFCFg7KwiFZOCwLR8vCkWVklKVklOVklCVlPNrKmjjgaPrFiaOEgYHIbNGSPuR0tMD3Iz/a9fuRJ01DWIaOMdGGUVIHmU7yZjOd5GFlOsnt/9/x/g247jHY"
    ],
    "fileMap": {
      "1": {
        "source": "mod interfaces;\nmod util;\n\n// Demonstrates how to use portal contracts to swap on L1 Uniswap with funds on L2\n// Has two separate flows for private and public respectively\n// Uses the token bridge contract, which tells which input token we need to talk to and handles the exit funds to L1 \ncontract AztecLend {\n\n    use dep::aztec::{\n        hash::{compute_secret_hash},\n        context::{PrivateContext, PublicContext, Context},\n        oracle::{context::get_portal_address},\n        state_vars::{map::Map, public_state::PublicState},\n        types::address::{AztecAddress, EthereumAddress},\n        types::type_serialization::bool_serialization::{\n            BoolSerializationMethods, BOOL_SERIALIZED_LEN,\n        },\n        types::type_serialization::field_serialization::{\n            FieldSerializationMethods, FIELD_SERIALIZED_LEN,\n        },\n        selector::compute_selector,\n    };\n\n    use dep::authwit::auth::{IS_VALID_SELECTOR, assert_current_call_valid_authwit_public, compute_authwit_message_hash};\n    \n    use crate::interfaces::{Token, TokenBridge};\n    use crate::util::{compute_deposit_public_content_hash, compute_deposit_private_content_hash};\n\n    struct Storage {\n        // like with account contracts, stores the approval message on a slot and tracks if they are active\n        approved_action: Map<PublicState<bool, BOOL_SERIALIZED_LEN>>,\n        // tracks the nonce used to create the approval message for burning funds\n        // gets incremented each time after use to prevent replay attacks\n        nonce_for_burn_approval: PublicState<Field, FIELD_SERIALIZED_LEN>,\n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                approved_action: Map::new(\n                    context,\n                    1,\n                    |context, slot| {\n                        PublicState::new(context, slot, BoolSerializationMethods)\n                    },\n                ),\n                nonce_for_burn_approval: PublicState::new(context, 2, FieldSerializationMethods),\n            }\n        }\n    }\n    \n    #[aztec(private)]\n    fn constructor() {}\n\n// docs:start:swap_public\n    #[aztec(public)]\n    fn deposit_public(\n        sender: AztecAddress,\n        input_asset_bridge: AztecAddress, \n        input_amount: Field,\n        output_asset_bridge: AztecAddress,\n        // params for using the transfer approval\n        nonce_for_transfer_approval: Field,\n        // params for the depositing output_asset back to Aztec\n        recipient: AztecAddress,\n        secret_hash_for_L1_to_l2_message: Field,\n        deadline_for_L1_to_l2_message: Field,\n        canceller_for_L1_to_L2_message: EthereumAddress,\n        caller_on_L1: EthereumAddress,\n        // nonce for someone to call swap on sender's behalf\n        nonce_for_swap_approval: Field,\n    ) -> Field {\n\n        if (sender.address != context.msg_sender()) {\n            assert_current_call_valid_authwit_public(&mut context, sender);\n        }\n\n        let input_asset = TokenBridge::at(input_asset_bridge.address).token(context);\n\n        // Transfer funds to this contract\n        Token::at(input_asset.address).transfer_public(\n            context,\n            sender.address,\n            context.this_address(),\n            input_amount,\n            nonce_for_transfer_approval,\n        );\n\n        // Approve bridge to burn this contract's funds and exit to L1 Uniswap Portal\n        let _void = context.call_public_function(\n            context.this_address(), \n            compute_selector(\"_approve_bridge_and_exit_input_asset_to_L1((Field),(Field),Field)\"), \n            [input_asset.address, input_asset_bridge.address, input_amount],\n        );\n\n        // Create swap message and send to Outbox for Uniswap Portal\n        // this ensures the integrity of what the user originally intends to do on L1.\n        let input_asset_bridge_portal_address = get_portal_address(input_asset_bridge.address);\n        let output_asset_bridge_portal_address = get_portal_address(output_asset_bridge.address);\n        // ensure portal exists - else funds might be lost\n        assert(input_asset_bridge_portal_address != 0, \"L1 portal address of input_asset's bridge is 0\");\n        assert(output_asset_bridge_portal_address != 0, \"L1 portal address of output_asset's bridge is 0\");\n\n        let content_hash = compute_deposit_public_content_hash(\n            input_asset_bridge_portal_address,\n            input_amount,\n            output_asset_bridge_portal_address,\n            recipient.address,\n            secret_hash_for_L1_to_l2_message,\n            deadline_for_L1_to_l2_message,\n            canceller_for_L1_to_L2_message.address,\n            caller_on_L1.address,\n        );\n        context.message_portal(content_hash);\n\n        1\n    }\n\n    #[aztec(private)]\n    fn deposit_private(\n        input_asset: AztecAddress, // since private, we pass here and later assert that this is as expected by input_bridge\n        input_asset_bridge: AztecAddress, \n        input_amount: Field,\n        output_asset_bridge: AztecAddress,\n        // params for using the unshield approval\n        nonce_for_unshield_approval: Field,\n        // params for the depositing output_asset back to Aztec\n        secret_hash_for_redeeming_minted_notes: Field, // secret hash used to redeem minted notes at a later time. This enables anyone to call this function and mint tokens to a user on their behalf\n        secret_hash_for_L1_to_l2_message: Field, // for when l1 uniswap portal inserts the message to consume output assets on L2\n        deadline_for_L1_to_l2_message: Field, // for when l1 uniswap portal inserts the message to consume output assets on L2\n        canceller_for_L1_to_L2_message: EthereumAddress, // L1 address of who can cancel the message to consume assets on L2.\n        caller_on_L1: EthereumAddress, // ethereum address that can call this function on the L1 portal (0x0 if anyone can call)\n    ) -> Field {\n\n        // Assert that user provided token address is same as expected by token bridge.\n        // we can't directly use `input_asset_bridge.token` because that is a public method and public can't return data to private\n        context.call_public_function(context.this_address(), compute_selector(\"_assert_token_is_same((Field),(Field))\"), [input_asset.address, input_asset_bridge.address]);\n\n        // Transfer funds to this contract\n        Token::at(input_asset.address).unshield(\n            &mut context,\n            context.msg_sender(),\n            context.this_address(),\n            input_amount,\n            nonce_for_unshield_approval,\n        );\n\n        // Approve bridge to burn this contract's funds and exit to L1 Uniswap Portal\n        context.call_public_function(\n            context.this_address(), \n            compute_selector(\"_approve_bridge_and_exit_input_asset_to_L1((Field),(Field),Field)\"), \n            [input_asset.address, input_asset_bridge.address, input_amount],\n        );\n\n        // Create swap message and send to Outbox for Uniswap Portal\n        // this ensures the integrity of what the user originally intends to do on L1.\n        let input_asset_bridge_portal_address = get_portal_address(input_asset_bridge.address);\n        let output_asset_bridge_portal_address = get_portal_address(output_asset_bridge.address);\n        // ensure portal exists - else funds might be lost\n        assert(input_asset_bridge_portal_address != 0, \"L1 portal address of input_asset's bridge is 0\");\n        assert(output_asset_bridge_portal_address != 0, \"L1 portal address of output_asset's bridge is 0\");\n\n        let content_hash = compute_deposit_private_content_hash(\n            input_asset_bridge_portal_address,\n            input_amount,\n            output_asset_bridge_portal_address,\n            secret_hash_for_redeeming_minted_notes,\n            secret_hash_for_L1_to_l2_message,\n            deadline_for_L1_to_l2_message,\n            canceller_for_L1_to_L2_message.address,\n            caller_on_L1.address,\n        );\n        context.message_portal(content_hash);\n\n        1\n    }\n    // docs:end:swap_private\n\n    // docs:start:authwit_uniswap_get\n    // Since the token bridge burns funds on behalf of this contract, this contract has to tell the token contract if the signature is valid\n    // implementation is similar to how account contracts validate public approvals.\n    // if valid, it returns the IS_VALID selector which is expected by token contract\n    #[aztec(public)]\n    fn is_valid_public(message_hash: Field) -> Field {\n        let value = storage.approved_action.at(message_hash).read();\n        if (value){\n            IS_VALID_SELECTOR\n        } else {\n            0\n        }\n    }\n    // docs:end:authwit_uniswap_get\n\n    // docs:start:authwit_uniswap_set\n    // This helper method approves the bridge to burn this contract's funds and exits the input asset to L1\n    // Assumes contract already has funds. \n    // Assume `token` relates to `token_bridge` (ie token_bridge.token == token)\n    // Note that private can't read public return values so created an internal public that handles everything\n    // this method is used for both private and public swaps.\n    #[aztec(public)]\n    internal fn _approve_bridge_and_exit_input_asset_to_L1(\n        token: AztecAddress,\n        token_bridge: AztecAddress, \n        amount: Field,\n    ) {\n        // approve bridge to burn this contract's funds (required when exiting on L1, as it burns funds on L2):\n        let nonce_for_burn_approval = storage.nonce_for_burn_approval.read();\n        let selector = compute_selector(\"burn_public((Field),Field,Field)\");\n        let message_hash = compute_authwit_message_hash(token_bridge, token, selector, [context.this_address(), amount, nonce_for_burn_approval]);\n        storage.approved_action.at(message_hash).write(true);\n\n        // increment nonce_for_burn_approval so it won't be used again\n        storage.nonce_for_burn_approval.write(nonce_for_burn_approval + 1);\n\n        // Exit to L1 Uniswap Portal !\n        TokenBridge::at(token_bridge.address).exit_to_l1_public(\n            context,\n            context.this_portal_address(),\n            amount,\n            context.this_portal_address(),\n            nonce_for_burn_approval,\n        );\n    }\n    // docs:end:authwit_uniswap_set\n\n    // docs:start:assert_token_is_same\n    #[aztec(public)]\n    internal fn _assert_token_is_same(token: AztecAddress, token_bridge: AztecAddress) {\n        assert(token.eq(TokenBridge::at(token_bridge.address).token(context)), \"input_asset address is not the same as seen in the bridge contract\");\n    }\n    // docs:end:assert_token_is_same\n\n\n   unconstrained fn compute_authwith_msg_hash(\n        azteclend: AztecAddress,\n        token: AztecAddress,\n        user: Field, \n        amount: Field,\n        nonce: Field\n    ) -> Field {\n        let selector = compute_selector(\"unshield((Field),(Field),Field,Field)\");\n        // compute_authwit_message_hash(azteclend, token, selector, [user, context.this_address(), amount, nonce]);\n        let hash = compute_authwit_message_hash(azteclend, token, selector, [user, azteclend.address, amount, nonce]);\n        hash\n    }\n\n    // /// Unconstrained /// \n\n    // this method exists solely for e2e tests to test that nonce gets incremented each time.\n    unconstrained fn nonce_for_burn_approval() -> Field {\n        storage.nonce_for_burn_approval.read()\n    }\n\n    unconstrained fn get_secret_hash(secret: Field) -> Field {\n        let hash = compute_secret_hash(secret);\n        hash\n    }\n\n\n}",
        "path": "/Users/jack-sw/Codes/online/aztec_lend/aztec-contracts/src/main"
      },
      "4": {
        "source": "mod poseidon;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input : [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input : [u8; N]) -> [u8; 32] {}\n\npub fn pedersen<N>(input : [Field; N]) -> [Field; 2] {\n    pedersen_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn pedersen_with_separator<N>(_input : [Field; N], _separator : u32) -> [Field; 2] {}\n\n#[foreign(hash_to_field_128_security)]\npub fn hash_to_field<N>(_input : [Field; N]) -> Field {}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input : [u8; N], _message_size: u32) -> [u8; 32] {}\n\n// mimc-p/p implementation\n// constants are (publicly generated) random numbers, for instance using keccak as a ROM.\n// You must use constants generated for the native field\n// Rounds number should be ~ log(p)/log(exp)\n// For 254 bit primes, exponent 7 and 91 rounds seems to be recommended\nfn mimc<N>(x: Field, k: Field, constants: [Field; N], exp : Field) -> Field {\n    //round 0\n    let mut t = x + k;\n    let mut h = t.pow_32(exp);\n    //next rounds\n    for i in 1 .. constants.len() {\n        t = h + k + constants[i];\n        h = t.pow_32(exp);\n    };\n    h + k\n}\n\nglobal MIMC_BN254_ROUNDS = 91;\n\n//mimc implementation with hardcoded parameters for BN254 curve.\npub fn mimc_bn254<N>(array: [Field; N]) -> Field {\n    //mimc parameters\n    let exponent = 7;\n    //generated from seed \"mimc\" using keccak256 \n    let constants: [Field; MIMC_BN254_ROUNDS] = [\n        0, \n        20888961410941983456478427210666206549300505294776164667214940546594746570981,\n        15265126113435022738560151911929040668591755459209400716467504685752745317193,\n        8334177627492981984476504167502758309043212251641796197711684499645635709656,\n        1374324219480165500871639364801692115397519265181803854177629327624133579404,\n        11442588683664344394633565859260176446561886575962616332903193988751292992472,\n        2558901189096558760448896669327086721003508630712968559048179091037845349145,\n        11189978595292752354820141775598510151189959177917284797737745690127318076389,\n        3262966573163560839685415914157855077211340576201936620532175028036746741754,\n        17029914891543225301403832095880481731551830725367286980611178737703889171730,\n        4614037031668406927330683909387957156531244689520944789503628527855167665518,\n        19647356996769918391113967168615123299113119185942498194367262335168397100658,\n        5040699236106090655289931820723926657076483236860546282406111821875672148900,\n        2632385916954580941368956176626336146806721642583847728103570779270161510514,\n        17691411851977575435597871505860208507285462834710151833948561098560743654671,\n        11482807709115676646560379017491661435505951727793345550942389701970904563183,\n        8360838254132998143349158726141014535383109403565779450210746881879715734773,\n        12663821244032248511491386323242575231591777785787269938928497649288048289525,\n        3067001377342968891237590775929219083706800062321980129409398033259904188058,\n        8536471869378957766675292398190944925664113548202769136103887479787957959589,\n        19825444354178182240559170937204690272111734703605805530888940813160705385792,\n        16703465144013840124940690347975638755097486902749048533167980887413919317592,\n        13061236261277650370863439564453267964462486225679643020432589226741411380501,\n        10864774797625152707517901967943775867717907803542223029967000416969007792571,\n        10035653564014594269791753415727486340557376923045841607746250017541686319774,\n        3446968588058668564420958894889124905706353937375068998436129414772610003289,\n        4653317306466493184743870159523234588955994456998076243468148492375236846006,\n        8486711143589723036499933521576871883500223198263343024003617825616410932026,\n        250710584458582618659378487568129931785810765264752039738223488321597070280,\n        2104159799604932521291371026105311735948154964200596636974609406977292675173,\n        16313562605837709339799839901240652934758303521543693857533755376563489378839,\n        6032365105133504724925793806318578936233045029919447519826248813478479197288,\n        14025118133847866722315446277964222215118620050302054655768867040006542798474,\n        7400123822125662712777833064081316757896757785777291653271747396958201309118,\n        1744432620323851751204287974553233986555641872755053103823939564833813704825,\n        8316378125659383262515151597439205374263247719876250938893842106722210729522,\n        6739722627047123650704294650168547689199576889424317598327664349670094847386,\n        21211457866117465531949733809706514799713333930924902519246949506964470524162,\n        13718112532745211817410303291774369209520657938741992779396229864894885156527,\n        5264534817993325015357427094323255342713527811596856940387954546330728068658,\n        18884137497114307927425084003812022333609937761793387700010402412840002189451,\n        5148596049900083984813839872929010525572543381981952060869301611018636120248,\n        19799686398774806587970184652860783461860993790013219899147141137827718662674,\n        19240878651604412704364448729659032944342952609050243268894572835672205984837,\n        10546185249390392695582524554167530669949955276893453512788278945742408153192,\n        5507959600969845538113649209272736011390582494851145043668969080335346810411,\n        18177751737739153338153217698774510185696788019377850245260475034576050820091,\n        19603444733183990109492724100282114612026332366576932662794133334264283907557,\n        10548274686824425401349248282213580046351514091431715597441736281987273193140,\n        1823201861560942974198127384034483127920205835821334101215923769688644479957,\n        11867589662193422187545516240823411225342068709600734253659804646934346124945,\n        18718569356736340558616379408444812528964066420519677106145092918482774343613,\n        10530777752259630125564678480897857853807637120039176813174150229243735996839,\n        20486583726592018813337145844457018474256372770211860618687961310422228379031,\n        12690713110714036569415168795200156516217175005650145422920562694422306200486,\n        17386427286863519095301372413760745749282643730629659997153085139065756667205,\n        2216432659854733047132347621569505613620980842043977268828076165669557467682,\n        6309765381643925252238633914530877025934201680691496500372265330505506717193,\n        20806323192073945401862788605803131761175139076694468214027227878952047793390,\n        4037040458505567977365391535756875199663510397600316887746139396052445718861,\n        19948974083684238245321361840704327952464170097132407924861169241740046562673,\n        845322671528508199439318170916419179535949348988022948153107378280175750024,\n        16222384601744433420585982239113457177459602187868460608565289920306145389382,\n        10232118865851112229330353999139005145127746617219324244541194256766741433339,\n        6699067738555349409504843460654299019000594109597429103342076743347235369120,\n        6220784880752427143725783746407285094967584864656399181815603544365010379208,\n        6129250029437675212264306655559561251995722990149771051304736001195288083309,\n        10773245783118750721454994239248013870822765715268323522295722350908043393604,\n        4490242021765793917495398271905043433053432245571325177153467194570741607167,\n        19596995117319480189066041930051006586888908165330319666010398892494684778526,\n        837850695495734270707668553360118467905109360511302468085569220634750561083,\n        11803922811376367215191737026157445294481406304781326649717082177394185903907,\n        10201298324909697255105265958780781450978049256931478989759448189112393506592,\n        13564695482314888817576351063608519127702411536552857463682060761575100923924,\n        9262808208636973454201420823766139682381973240743541030659775288508921362724,\n        173271062536305557219323722062711383294158572562695717740068656098441040230,\n        18120430890549410286417591505529104700901943324772175772035648111937818237369,\n        20484495168135072493552514219686101965206843697794133766912991150184337935627,\n        19155651295705203459475805213866664350848604323501251939850063308319753686505,\n        11971299749478202793661982361798418342615500543489781306376058267926437157297,\n        18285310723116790056148596536349375622245669010373674803854111592441823052978,\n        7069216248902547653615508023941692395371990416048967468982099270925308100727,\n        6465151453746412132599596984628739550147379072443683076388208843341824127379,\n        16143532858389170960690347742477978826830511669766530042104134302796355145785,\n        19362583304414853660976404410208489566967618125972377176980367224623492419647,\n        1702213613534733786921602839210290505213503664731919006932367875629005980493,\n        10781825404476535814285389902565833897646945212027592373510689209734812292327,\n        4212716923652881254737947578600828255798948993302968210248673545442808456151,\n        7594017890037021425366623750593200398174488805473151513558919864633711506220,\n        18979889247746272055963929241596362599320706910852082477600815822482192194401,\n        13602139229813231349386885113156901793661719180900395818909719758150455500533,\n    ];\n\n    let mut r = 0;\n    for elem in array {\n        let h = mimc(elem, r, constants, exponent);\n        r = r + elem + h;\n    }\n    r\n}\n",
        "path": "std/hash"
      },
      "21": {
        "source": "\nimpl Field {\n    #[builtin(to_le_bits)]\n    pub fn to_le_bits(_x : Field, _bit_size: u32) -> [u1] {}\n    #[builtin(to_be_bits)]\n    pub fn to_be_bits(_x : Field, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(x : Field, byte_size: u32) -> [u8] {\n        x.to_le_radix(256, byte_size)\n    }\n    pub fn to_be_bytes(x : Field, byte_size: u32) -> [u8] {\n        x.to_be_radix(256, byte_size)\n    }\n\n    #[builtin(to_le_radix)]\n    //decompose _x into a _result_len vector over the _radix basis\n    //_radix must be less than 256\n    pub fn to_le_radix(_x : Field, _radix: u32, _result_len: u32) -> [u8] {}\n    #[builtin(to_be_radix)]\n    pub fn to_be_radix(_x : Field, _radix: u32, _result_len: u32) -> [u8] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n",
        "path": "std/field"
      },
      "35": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\n\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)[0]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)[0]\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    private_data_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.private_data_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { private_data_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)[0]\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        dep::std::hash::pedersen_with_separator(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)[0]\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)[0]\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        dep::std::hash::pedersen_with_separator(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = dep::std::hash::pedersen_with_separator(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS)[0];\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        dep::std::hash::pedersen_with_separator(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)[0]\n    }\n}\n",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/abi"
      },
      "38": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    private_data_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/context"
      },
      "39": {
        "source": "use dep::std::hash::{pedersen_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_with_separator([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)[0]\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/hash"
      },
      "54": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/arguments"
      },
      "55": {
        "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/call_private_function"
      },
      "56": {
        "source": "#[oracle(getPortalContractAddress)]\nfn _get_portal_address(_contract_address: Field) -> Field {}\n\nunconstrained pub fn get_portal_address(contract_address: Field) -> Field {\n    let portal_address = _get_portal_address(contract_address);\n    portal_address\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/context"
      },
      "62": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call"
      },
      "63": {
        "source": "use crate::constants_gen::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}\n",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/public_call"
      },
      "65": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/oracle/storage"
      },
      "67": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/private_call_stack_item"
      },
      "68": {
        "source": "use crate::{\n    abi,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}\n\n",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/public_call_stack_item"
      },
      "69": {
        "source": "use crate::utils::field_from_bytes;\n\nglobal SELECTOR_SIZE = 4;\n\npub fn compute_selector<N>(signature: str<N>) -> Field {\n    let bytes = signature.as_bytes();\n    let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n    \n    let mut selector_be_bytes = [0; SELECTOR_SIZE];\n    for i in 0..SELECTOR_SIZE {\n        selector_be_bytes[i] = hash[i];\n    }\n\n    field_from_bytes(selector_be_bytes, true)\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/selector"
      },
      "72": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = dep::std::hash::pedersen([self.storage_slot, key])[0];\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/state_vars/map"
      },
      "73": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/state_vars/public_state"
      },
      "77": {
        "source": "struct AztecAddress {\n  address: Field\n}\n\nimpl AztecAddress {\n  pub fn new(address: Field) -> Self {\n    Self {\n      address\n    }\n  }\n\n  pub fn eq(self: Self, other: Self) -> bool {\n    self.address == other.address\n  }\n\n  pub fn serialize(self: Self) -> [Field; 1] {\n    [self.address]\n  }\n\n  pub fn deserialize(fields: [Field; 1]) -> Self {\n    Self {\n      address: fields[0]\n    }\n  }\n}\n\nstruct EthereumAddress {\n  address: Field\n}\n\nimpl EthereumAddress {\n  pub fn new(address: Field) -> Self {\n    // Check that it actually will fit. Spending a lot of constraints here :grimacing:\n    let bytes = address.to_be_bytes(32);\n    for i in 0..12 {\n        assert(bytes[i] == 0, \"Value too large for an ethereum address\");\n    }\n    Self {\n      address\n    }\n  }\n\n\n  pub fn serialize(self: Self) -> [Field; 1] {\n    [self.address]\n  }\n\n  pub fn deserialize(fields: [Field; 1]) -> Self {\n    Self {\n      address: fields[0]\n    }\n  }\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/types/address"
      },
      "79": {
        "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/types/vec"
      },
      "81": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\n\nfn deserializeBool(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n    fields[0] as bool\n}\n\nfn serializeBool(value: bool) -> [Field; BOOL_SERIALIZED_LEN] {\n    [value as Field]\n}\n\nglobal BoolSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeBool,\n    serialize: serializeBool,\n};",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/types/type_serialization/bool_serialization"
      },
      "82": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/types/type_serialization/field_serialization"
      },
      "85": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/aztec/src/utils"
      },
      "88": {
        "source": "use dep::std::hash::pedersen_with_separator;\n\nuse dep::aztec::{\n  context::{PrivateContext, PublicContext, Context},\n  constants_gen::{EMPTY_NULLIFIED_COMMITMENT, GENERATOR_INDEX__SIGNATURE_PAYLOAD},\n  types::address::AztecAddress,\n  abi::hash_args,\n};\n\nglobal IS_VALID_SELECTOR = 0xe86ab4ff;\nglobal IS_VALID_PUBLIC_SELECTOR = 0xf3661153;\n\n// @todo #2676 Should use different generator than the payload to limit probability of collisions.\n\n// docs:start:assert_valid_authwit\n// Assert that `on_behalf_of` have authorized `message_hash` with a valid authentication witness\npub fn assert_valid_authwit(context: &mut PrivateContext, on_behalf_of: AztecAddress, message_hash: Field) {\n  let result = context.call_private_function(on_behalf_of.address, IS_VALID_SELECTOR, [message_hash])[0];\n  context.push_new_nullifier(message_hash, EMPTY_NULLIFIED_COMMITMENT);\n  assert(result == IS_VALID_SELECTOR, \"Message not authorized by account\");\n}\n// docs:end:assert_valid_authwit\n\n// docs:start:assert_current_call_valid_authwit\n// Assert that `on_behalf_of` have authorized the current call with a valid authentication witness\npub fn assert_current_call_valid_authwit(context: &mut PrivateContext, on_behalf_of: AztecAddress) {\n  // message_hash = H(caller, contract_this, selector, args_hash)\n  let message_hash = pedersen_with_separator(\n    [context.msg_sender(), context.this_address(), context.selector(), context.args_hash],\n    GENERATOR_INDEX__SIGNATURE_PAYLOAD\n  )[0];\n  assert_valid_authwit(context, on_behalf_of, message_hash);\n}\n// docs:end:assert_current_call_valid_authwit\n\n// docs:start:assert_valid_authwit_public\n// Assert that `on_behalf_of` have authorized `message_hash` in a public context\npub fn assert_valid_authwit_public(context: &mut PublicContext, on_behalf_of: AztecAddress, message_hash: Field) {\n  let result = context.call_public_function(on_behalf_of.address, IS_VALID_PUBLIC_SELECTOR, [message_hash])[0];\n  context.push_new_nullifier(message_hash, EMPTY_NULLIFIED_COMMITMENT);\n  assert(result == IS_VALID_SELECTOR, \"Message not authorized by account\");\n}\n// docs:end:assert_valid_authwit_public\n\n// docs:start:assert_current_call_valid_authwit_public\n// Assert that `on_behalf_of` have authorized the current call in a public context\npub fn assert_current_call_valid_authwit_public(context: &mut PublicContext, on_behalf_of: AztecAddress) {\n  // message_hash = H(caller, contract_this, selector, args_hash)\n  let message_hash = pedersen_with_separator(\n    [context.msg_sender(), context.this_address(), context.selector(), context.args_hash],\n    GENERATOR_INDEX__SIGNATURE_PAYLOAD\n  )[0];\n  assert_valid_authwit_public(context, on_behalf_of, message_hash);\n}\n// docs:end:assert_current_call_valid_authwit_public\n\n// docs:start:compute_authwit_message_hash\n// Compute the message hash to be used by an authentication witness \npub fn compute_authwit_message_hash<N>(\n  caller: AztecAddress, \n  target: AztecAddress, \n  selector: Field, \n  args: [Field; N]\n) -> Field {\n  let args_hash = hash_args(args);\n  pedersen_with_separator([caller.address, target.address, selector, args_hash], GENERATOR_INDEX__SIGNATURE_PAYLOAD)[0]\n}\n// docs:end:compute_authwit_message_hash",
        "path": "/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.9.0/yarn-project/aztec-nr/authwit/src/auth"
      },
      "90": {
        "source": "// docs:start:interfaces\nuse dep::aztec::{\n  context::{ PrivateContext, PublicContext, Context },\n  selector::compute_selector,\n  types::address::AztecAddress,\n};\n\nstruct Token {\n  address: Field,\n}\n\nimpl Token {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn transfer_public(self: Self, context: PublicContext, from: Field, to: Field, amount: Field, nonce: Field) {\n    let _transfer_return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"transfer_public((Field),(Field),Field,Field)\"),\n      [from, to, amount, nonce]\n    );\n  }\n\n  pub fn unshield(self: Self, context: &mut PrivateContext, from: Field, to: Field,  amount: Field, nonce: Field) {\n    let _return_values = context.call_private_function(\n      self.address,\n      compute_selector(\"unshield((Field),(Field),Field,Field)\"),\n      [from, to, amount, nonce]\n    );\n  }\n}\n\nstruct TokenBridge {\n  address: Field,\n}\n\nimpl TokenBridge {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn token(self: Self, context: PublicContext) -> AztecAddress {\n    let return_values = context.call_public_function(self.address, compute_selector(\"get_token()\"), []);\n    AztecAddress::new(return_values[0])\n  }\n\n  pub fn exit_to_l1_public(self: Self, context: PublicContext, recipient: Field, amount: Field, callerOnL1: Field, nonce: Field) {\n    let _return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"exit_to_l1_public((Field),Field,(Field),Field)\"),\n      [recipient, amount, callerOnL1, nonce]\n    );\n  }\n}\n// docs:end:interfaces",
        "path": "/Users/jack-sw/Codes/online/aztec_lend/aztec-contracts/src/interfaces"
      },
      "91": {
        "source": "// docs:start:uniswap_public_content_hash\nuse dep::aztec::hash::sha256_to_field;\n\n// https://github.com/AztecProtocol/aztec-packages/blob/aztec-packages-v0.9.0/yarn-project/noir-contracts/src/contracts/uniswap_contract/src/util.nr\n\n// This method computes the L2 to L1 message content hash for the public\n// refer `l1-contracts/test/portals/UniswapPortal.sol` on how L2 to L1 message is expected\npub fn compute_deposit_public_content_hash(\n    input_asset_bridge_portal_address: Field,\n    input_amount: Field,\n    output_asset_bridge_portal_address: Field,\n    aztec_recipient: Field,\n    secret_hash_for_L1_to_l2_message: Field,\n    deadline_for_L1_to_l2_message: Field,\n    canceller_for_L1_to_L2_message: Field,\n    caller_on_L1: Field,\n) -> Field {\n    let mut hash_bytes: [u8; 260] = [0; 260]; // 8 fields of 32 bytes each + 4 bytes fn selector\n\n    let input_token_portal_bytes = input_asset_bridge_portal_address.to_be_bytes(32);\n    let in_amount_bytes = input_amount.to_be_bytes(32);\n    let output_token_portal_bytes = output_asset_bridge_portal_address.to_be_bytes(32);\n    let aztec_recipient_bytes = aztec_recipient.to_be_bytes(32);\n    let secret_hash_for_L1_to_l2_message_bytes = secret_hash_for_L1_to_l2_message.to_be_bytes(32);\n    let deadline_for_L1_to_l2_message_bytes = deadline_for_L1_to_l2_message.to_be_bytes(32);\n    let canceller_bytes = canceller_for_L1_to_L2_message.to_be_bytes(32);\n    let caller_on_L1_bytes = caller_on_L1.to_be_bytes(32);\n\n    // selector for depositPublic() == 0x076fcbc8\n    hash_bytes[0] = 0x07;\n    hash_bytes[1] = 0x6f;\n    hash_bytes[2] = 0xcb;\n    hash_bytes[3] = 0xc8;\n\n\n    for i in 0..32 {\n        hash_bytes[i + 4] = input_token_portal_bytes[i];\n        hash_bytes[i + 36] = in_amount_bytes[i];\n        hash_bytes[i + 68] = output_token_portal_bytes[i];\n        hash_bytes[i + 100] = aztec_recipient_bytes[i];\n        hash_bytes[i + 132] = secret_hash_for_L1_to_l2_message_bytes[i];\n        hash_bytes[i + 164] = deadline_for_L1_to_l2_message_bytes[i];\n        hash_bytes[i + 196] = canceller_bytes[i];\n        hash_bytes[i + 228] = caller_on_L1_bytes[i];\n    }\n\n    let content_hash = sha256_to_field(hash_bytes);\n    content_hash\n}\n// docs:end:uniswap_public_content_hash\n\n// docs:start:compute_swap_private_content_hash\n// This method computes the L2 to L1 message content hash for the private\n// refer `l1-contracts/test/portals/UniswapPortal.sol` on how L2 to L1 message is expected\npub fn compute_deposit_private_content_hash(\n    input_asset_bridge_portal_address: Field,\n    input_amount: Field,\n    output_asset_bridge_portal_address: Field,\n    secret_hash_for_redeeming_minted_notes: Field,\n    secret_hash_for_L1_to_l2_message: Field,\n    deadline_for_L1_to_l2_message: Field,\n    canceller_for_L1_to_L2_message: Field,\n    caller_on_L1: Field,\n) -> Field {\n    let mut hash_bytes: [u8; 260] = [0; 260]; // 8 fields of 32 bytes each + 4 bytes fn selector\n\n    let input_token_portal_bytes = input_asset_bridge_portal_address.to_be_bytes(32);\n    let in_amount_bytes = input_amount.to_be_bytes(32);\n    let output_token_portal_bytes = output_asset_bridge_portal_address.to_be_bytes(32);\n    let secret_hash_for_redeeming_minted_notes_bytes = secret_hash_for_redeeming_minted_notes.to_be_bytes(32);\n    let secret_hash_for_L1_to_l2_message_bytes = secret_hash_for_L1_to_l2_message.to_be_bytes(32);\n    let deadline_for_L1_to_l2_message_bytes = deadline_for_L1_to_l2_message.to_be_bytes(32);\n    let canceller_bytes = canceller_for_L1_to_L2_message.to_be_bytes(32);\n    let caller_on_L1_bytes = caller_on_L1.to_be_bytes(32);\n\n    // function selector: 0x42f5fc44 for depositPrivate\n    hash_bytes[0] = 0x42;\n    hash_bytes[1] = 0xf5;\n    hash_bytes[2] = 0xfc;\n    hash_bytes[3] = 0x44;\n\n    for i in 0..32 {\n        hash_bytes[i + 4] = input_token_portal_bytes[i];\n        hash_bytes[i + 36] = in_amount_bytes[i];\n        hash_bytes[i + 68] = output_token_portal_bytes[i];\n        hash_bytes[i + 100] = secret_hash_for_redeeming_minted_notes_bytes[i];\n        hash_bytes[i + 132] = secret_hash_for_L1_to_l2_message_bytes[i];\n        hash_bytes[i + 164] = deadline_for_L1_to_l2_message_bytes[i];\n        hash_bytes[i + 196] = canceller_bytes[i];\n        hash_bytes[i + 228] = caller_on_L1_bytes[i];\n    }\n    let content_hash = sha256_to_field(hash_bytes);\n    content_hash\n}\n// docs:end:compute_swap_private_content_hash",
        "path": "/Users/jack-sw/Codes/online/aztec_lend/aztec-contracts/src/util"
      }
    }
  }
}